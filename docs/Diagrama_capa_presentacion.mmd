classDiagram
direction TB
    class VistaPrincipal {
	    - panelJuego: JPanel
	    - panelLateral: JPanel
	    - menuBar: JMenuBar
	    + iniciar()
	    + mostrarVentanaPrincipal()
	    + cerrarAplicacion()
    }

    class VistaError {
	    - mensaje: String
	    - tipoError: String
	    + mostrarError(mensaje: String)
	    + cerrarVentana()
    }

    class VistaFormulario {
	    - campos: Map~String, JTextField~
	    - botones: List~JButton~
	    + mostrarFormulario()
	    + obtenerDatos() : Map
	    + validarCampos() : boolean
    }

    class VistaJugador {
	    - nombreJugador: String
	    - puntaje: int
	    - fichasDisponibles: List~Ficha~
	    + mostrarInformacionJugador()
	    + actualizarPuntaje(puntos: int)
	    + mostrarFichasDisponibles()
    }

    class VistaHistorial {
	    - movimientos: List~Movimiento~
	    - partidasAnteriores: List~Partida~
	    + mostrarHistorialPartida()
	    + registrarMovimiento(movimiento: Movimiento)
	    + exportarHistorial() : boolean
    }

    class VistaDiccionario {
	    - palabrasValidas: Set~String~
	    - idiomaActual: String
	    + verificarPalabra(palabra: String) : boolean
	    + mostrarDefinicion(palabra: String)
	    + cambiarIdioma(idioma: String)
    }

    class VistaCrearDiccionario {
	    - palabrasNuevas: List~String~
	    - idioma: String
	    + agregarPalabra(palabra: String)
	    + guardarDiccionario() : boolean
	    + cargarDiccionario(ruta: String)
    }

    class VistaModificarDiccionario {
	    - palabrasModificadas: Map~String, String~
	    - palabrasEliminadas: List~String~
	    + modificarPalabra(palabraAntigua: String, palabraNueva: String)
	    + eliminarPalabra(palabra: String)
	    + guardarCambios() : boolean
    }

    class VistaMenuPartida {
	    - opcionesPartida: List~String~
	    - partidasGuardadas: List~Partida~
	    + iniciarNuevaPartida()
	    + cargarPartida(idPartida: int)
	    + configurarPartida()
    }

    class VistaConfigurePartida {
	    - tiempoTurno: int
	    - cantidadJugadores: int
	    - dificultad: String
	    + establecerReglas()
	    + agregarJugadores(jugadores: List~Jugador~)
	    + iniciarPartidaConfigurada()
    }

    class VistaPartida {
	    - tablero: Tablero
	    - jugadoresActivos: List~Jugador~
	    - turnoActual: int
	    + mostrarTablero()
	    + actualizarTablero(nuevasPosiciones: Map)
	    + mostrarTurnoActual()
    }

    class VistaPausa {
	    - opcionesPausa: List~String~
	    - tiempoPausado: long
	    + pausarPartida()
	    + reanudarPartida()
	    + guardarYSalir()
    }

    class VistaRanking {
	    - mejoresPuntajes: List~Score~
	    - filtros: Map~String, Object~
	    + mostrarRanking()
	    + filtrarPorCriterio(criterio: String)
	    + exportarRanking() : boolean
    }

    class VistaConfiguracion {
	    - configuracionSonido: boolean
	    - configuracionGraficos: Map~String, Object~
	    - idiomaAplicacion: String
	    + cambiarConfiguracion(tipo: String, valor: Object)
	    + guardarConfiguracion()
	    + cargarConfiguracionPredeterminada()
    }

    class ControladorPresentacion {
	    - vistas: Map~String, Object~
	    - modeloDominio: ModeloDominio
	    + iniciarAplicacion()
	    + gestionarEventos()
	    + conectarConDominio()
    }

    class ControladorVistaJugadores {
	    - vistaJugador: VistaJugador
	    - jugadoresActuales: List~Jugador~
	    + gestionarJugadores()
	    + actualizarVista()
	    + validarAccionesJugador()
    }

    class ControladorVistaDiccionario {
	    - vistaDiccionario: VistaDiccionario
	    - vistaCrearDiccionario: VistaCrearDiccionario
	    - vistaModificarDiccionario: VistaModificarDiccionario
	    + gestionarDiccionario()
	    + validarPalabras()
	    + sincronizarCambios()
    }

    class ControladorVistaPartida {
	    - vistaPartida: VistaPartida
	    - vistaMenuPartida: VistaMenuPartida
	    - vistaConfigurePartida: VistaConfigurePartida
	    + iniciarPartida()
	    + procesarMovimiento(movimiento: Movimiento)
	    + finalizarPartida()
    }

    class ControladorDominio {
	    + attribute:Type = defaultValue
	    + attribute2:Type
	    + attribute3:Type
	    + operation(param) :returnType
	    + operation2(param)
	    + operation3()
    }

    VistaMenuPartida <|-- ControladorVistaPartida
    VistaConfigurePartida <|-- ControladorVistaPartida
    VistaPartida <|-- ControladorVistaPartida
    VistaPausa <|-- ControladorVistaPartida
    VistaJugador <|-- ControladorVistaJugadores
    VistaHistorial <|-- ControladorVistaJugadores
    VistaDiccionario <|-- ControladorVistaDiccionario
    VistaCrearDiccionario <|-- ControladorVistaDiccionario
    VistaModificarDiccionario <|-- ControladorVistaDiccionario
    ControladorVistaJugadores <|-- ControladorPresentacion
    ControladorVistaDiccionario <|-- ControladorPresentacion
    ControladorVistaPartida <|-- ControladorPresentacion
    VistaError <|-- ControladorPresentacion
    VistaFormulario <|-- ControladorPresentacion
    VistaPrincipal <|-- ControladorPresentacion
	VistaRanking <|-- ControladorPresentacion
	VistaConfiguracion <|--ControladorPresentacion
    ControladorPresentacion <|-- ControladorDominio

